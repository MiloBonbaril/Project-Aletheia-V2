"""create initial schema

Revision ID: 0b5a50a473c6
Revises: 
Create Date: 2025-09-17 17:13:39.418722

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0b5a50a473c6'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('streams',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('vtuber_name', sa.String(length=120), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('ended_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('context', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_streams')),
    sa.UniqueConstraint('vtuber_name', 'started_at', name='uq_streams_vtuber_start')
    )
    op.create_index('ix_streams_started_at', 'streams', ['started_at'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=254), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('display_name', sa.String(length=120), nullable=True),
    sa.Column('role', sa.Enum('admin', 'moderator', 'operator', 'viewer', name='user_role'), server_default='operator', nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email'))
    )
    op.create_index('ix_users_role', 'users', ['role'], unique=False)
    op.create_table('data_lore',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('stream_id', sa.UUID(), nullable=True),
    sa.Column('origin', sa.Enum('aletheia', 'viewer', 'system', name='lore_origin'), nullable=False),
    sa.Column('speaker_name', sa.String(length=120), nullable=True),
    sa.Column('summary', sa.Text(), nullable=False),
    sa.Column('tags', postgresql.ARRAY(sa.String(length=40)), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['stream_id'], ['streams.id'], name=op.f('fk_data_lore_stream_id_streams'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_data_lore'))
    )
    op.create_index('ix_data_lore_origin_created', 'data_lore', ['origin', 'created_at'], unique=False)
    op.create_table('highlights',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('stream_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=160), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_offset_seconds', sa.Integer(), nullable=False),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String(length=40)), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('start_offset_seconds >= 0', name=op.f('ck_highlights_ck_highlights_start_offset_positive')),
    sa.ForeignKeyConstraint(['stream_id'], ['streams.id'], name=op.f('fk_highlights_stream_id_streams'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_highlights'))
    )
    op.create_index('ix_highlights_stream_start', 'highlights', ['stream_id', 'start_offset_seconds'], unique=False)
    op.create_table('long_term_memories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('stream_id', sa.UUID(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=False),
    sa.Column('summary_tokens', sa.Integer(), nullable=True),
    sa.Column('topics', postgresql.ARRAY(sa.String(length=50)), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['stream_id'], ['streams.id'], name=op.f('fk_long_term_memories_stream_id_streams'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_long_term_memories'))
    )
    op.create_index('ix_long_term_memories_stream_created', 'long_term_memories', ['stream_id', 'created_at'], unique=False)
    op.create_table('moderation_events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('stream_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('event_type', sa.String(length=80), nullable=False),
    sa.Column('severity', sa.Enum('info', 'warning', 'critical', name='moderation_severity'), server_default='info', nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('payload', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('acknowledged_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['stream_id'], ['streams.id'], name=op.f('fk_moderation_events_stream_id_streams'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_moderation_events_user_id_users'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_moderation_events'))
    )
    op.create_index('ix_moderation_events_severity', 'moderation_events', ['severity'], unique=False)
    op.create_index('ix_moderation_events_stream_created', 'moderation_events', ['stream_id', 'created_at'], unique=False)
    op.create_table('short_term_memories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('stream_id', sa.UUID(), nullable=True),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('message_role', sa.Enum('user', 'assistant', 'system', 'tool', name='memory_role'), nullable=False),
    sa.Column('channel', sa.Enum('chat', 'action', 'narration', name='memory_channel'), server_default='chat', nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('extra', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('sequence', sa.Integer(), server_default='0', nullable=False),
    sa.CheckConstraint('sequence >= 0', name=op.f('ck_short_term_memories_ck_short_term_memories_sequence_positive')),
    sa.ForeignKeyConstraint(['stream_id'], ['streams.id'], name=op.f('fk_short_term_memories_stream_id_streams'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_short_term_memories')),
    prefixes=['UNLOGGED']
    )
    op.create_index('ix_short_term_memories_created', 'short_term_memories', ['created_at'], unique=False)
    op.create_index('ix_short_term_memories_session', 'short_term_memories', ['session_id', 'sequence'], unique=False)
    op.create_index('ix_short_term_memories_stream_seq', 'short_term_memories', ['stream_id', 'sequence'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_short_term_memories_stream_seq', table_name='short_term_memories')
    op.drop_index('ix_short_term_memories_session', table_name='short_term_memories')
    op.drop_index('ix_short_term_memories_created', table_name='short_term_memories')
    op.drop_table('short_term_memories')
    op.drop_index('ix_moderation_events_stream_created', table_name='moderation_events')
    op.drop_index('ix_moderation_events_severity', table_name='moderation_events')
    op.drop_table('moderation_events')
    op.drop_index('ix_long_term_memories_stream_created', table_name='long_term_memories')
    op.drop_table('long_term_memories')
    op.drop_index('ix_highlights_stream_start', table_name='highlights')
    op.drop_table('highlights')
    op.drop_index('ix_data_lore_origin_created', table_name='data_lore')
    op.drop_table('data_lore')
    op.drop_index('ix_users_role', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_streams_started_at', table_name='streams')
    op.drop_table('streams')
    # ### end Alembic commands ###
